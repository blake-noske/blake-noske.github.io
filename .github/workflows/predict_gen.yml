name: Generate Predictions

# Schedule: Every Wednesday, Thursday, and Friday at 7 PM UTC (adjust time zone as needed)
on:
  schedule:
    - cron: "0 10 * * 1"  # Every Monday at 8 PM AEST or 9 PM AEDST
    - cron: "0 10 * * 2"  # Every Tuesday at 8 PM AEST or 9 PM AEDST
    - cron: "0 10 * * 3"  # Every Wednesday at 8 PM AEST or 9 PM AEDST
    - cron: "0 10 * * 4"  # Every Thursday at 8 PM AEST or 9 PM AEDST
    - cron: "0 9 * * 5"  # Every Friday at 7 PM AEST or 8 PM AEDST
    - cron: "0 8 * * 6"  # Every Saturday at 6 PM AEST or 7 PM AEDST
  workflow_dispatch:

jobs:
  run_r_script:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      # Step 3: Setup R
      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      # Step 4: Install packages
      - name: Install R packages
        run: |
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'remotes::install_version("fitzRoy", version = "1.5.0")' # Replace with the latest version
          Rscript -e 'remotes::install_cran(c("lubridate", "tidyr", "dplyr", "zoo", "httr", "jsonlite", "glue"))'

      # Step 5: Generate clean dataset
      - name: Run R script
        run: |
          Rscript "R scripts/R Studio/AFL Data Cleaning/Data collection and cleaning.R"  # Adjust the path if necessary

  run_python_notebooks:
      runs-on: ubuntu-latest
  
      needs: run_r_script  # This ensures that Python jobs run after the R job is completed
  
      steps:
        # Step 6: Checkout repository again in this job
        - name: Checkout repository
          uses: actions/checkout@v3
  
        # Step 7: Setup Python environment
        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10.13'  # Replace with your preferred version if needed
  
        # Step 8: Install Python dependencies
        - name: Upgrade pip
          run: |
            python -m pip install --upgrade pip

      # If you have a requirements.txt file, this will install the dependencies
        - name: Install Python dependencies
          run: |
            pip install -r "Website code/requirements.txt"
          # If you're not using requirements.txt, you can also list the needed packages directly:
          # run: |
          #   pip install numpy pandas scikit-learn jupyter nbconvert
  
        # Step 9: Run the model generation Python notebook
        - name: Run Model Generation Notebook
          run: |
            jupyter nbconvert --to notebook --execute "Website code/model_generation.ipynb" --output model_generation.ipynb
  
        # Step 10: Run the prediction generation Python notebook
        - name: Run Prediction Generation Notebook
          run: |
            jupyter nbconvert --to notebook --execute "Website code/prediction_function.ipynb" --output prediction_function.ipynb
