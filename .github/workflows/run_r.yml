name: Clean Data

# Schedule: Every day to line up with final team lists
on:
  schedule:
    - cron: "0 9 * * 1"  # Every Monday at 7 PM AEST or 8 PM AEDST
    - cron: "0 9 * * 2"  # Every Tuesday at 7 PM AEST or 8 PM AEDST
    - cron: "0 9 * * 3"  # Every Wednesday at 7 PM AEST or 8 PM AEDST
    - cron: "0 9 * * 4"  # Every Thursday at 7 PM AEST or 8 PM AEDST
    - cron: "0 8 * * 5"  # Every Friday at 6 PM AEST or 7 PM AEDST
    - cron: "0 7 * * 6"  # Every Saturday at 5 PM AEST or 6 PM AEDST
  workflow_dispatch:

jobs:
  run_r_script:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      # Step 3: Setup R
      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      # Step 4: Install packages
      - name: Install R packages
        run: |
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'remotes::install_version("fitzRoy", version = "1.5.0")' # Replace with the latest version
          Rscript -e 'remotes::install_cran(c("lubridate", "tidyr", "dplyr", "zoo", "httr", "jsonlite", "glue"))'

      # Step 5: Generate clean dataset
      - name: Run R script
        run: |
          Rscript "R scripts/R Studio/AFL Data Cleaning/Data collection and cleaning.R"  # Adjust the path if necessary

      # Step 6: Check for changes
      - name: Check for changes
        id: check_changes
        run: |
          git diff --quiet || echo "changes"

      # Step 7: Commit changes
      - name: Commit changes
        if: steps.check_changes.outputs.changes == 'changes'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "clean data"

      # Step 8: Push changes
      - name: Push changes
        if: steps.check_changes.outputs.changes == 'changes'
        run: |
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
